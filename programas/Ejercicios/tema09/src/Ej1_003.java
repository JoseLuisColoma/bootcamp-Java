/*
Ejercicio 3
¬øCu√°les ser√≠an los atributos de la clase Vivienda? ¬øQu√© subclases se te ocurren?
 */

/*
Clase principal: Vivienda

Una vivienda es una construcci√≥n habitable, por tanto, sus atributos deben describir caracter√≠sticas comunes a cualquier tipo de vivienda.

üîπ Atributos posibles
String	direccion	    Direcci√≥n completa
int	    metrosCuadrados	Superficie total
int	    numHabitaciones	N√∫mero de habitaciones
int	    numBanyos	    N√∫mero de ba√±os
double	precio	        Precio de venta o alquiler
boolean	tieneGaraje	    Si incluye garaje
boolean	tieneJardin	    Si incluye jard√≠n
boolean	esAlquilada	    Si la vivienda est√° en alquiler
String	tipoSuministro	Tipo de energ√≠a (el√©ctrica, gas, mixta, etc.)

Subclases posibles (herencia)
Podemos derivar tipos concretos de vivienda seg√∫n su forma o uso:
Vivienda
 - Piso (vive en edificio, tiene comunidad, planta, ascensor)
 - Chalet (tiene parcela, jard√≠n, piscina)
 - Apartamento (m√°s peque√±o, 1 habitaci√≥n)
 - D√∫plex (dos plantas dentro de la misma vivienda)
 - CasaRural (situada en campo, materiales t√≠picos)
 - √Åtico (√∫ltima planta, con terraza)
 - Estudio (un solo espacio sin habitaciones separadas)
 */

public class Ej1_003 {

    public static class Vivienda {
        protected String direccion;
        protected int metrosCuadrados;
        protected int numHabitaciones;
        protected int numBanos;
        protected double precio;
        protected boolean tieneGaraje;
        protected boolean tieneJardin;

        public Vivienda(String direccion, int metrosCuadrados, int numHabitaciones,
                        int numBanos, double precio, boolean tieneGaraje, boolean tieneJardin) {
            this.direccion = direccion;
            this.metrosCuadrados = metrosCuadrados;
            this.numHabitaciones = numHabitaciones;
            this.numBanos = numBanos;
            this.precio = precio;
            this.tieneGaraje = tieneGaraje;
            this.tieneJardin = tieneJardin;
        }

        public void mostrarInfo() {
            System.out.println("Direcci√≥n: " + direccion);
            System.out.println("Metros cuadrados: " + metrosCuadrados);
            System.out.println("Habitaciones: " + numHabitaciones);
            System.out.println("Ba√±os: " + numBanos);
            System.out.println("Precio: " + precio + "‚Ç¨");
            System.out.println("Garaje: " + (tieneGaraje ? "S√≠" : "No"));
            System.out.println("Jard√≠n: " + (tieneJardin ? "S√≠" : "No"));
        }
    }

    public static class Piso extends Vivienda {
        protected int planta;
        protected boolean tieneAscensor;

        public Piso(String direccion, int metrosCuadrados, int numHabitaciones, int numBanos,
                    double precio, boolean tieneGaraje, boolean tieneJardin,
                    int planta, boolean tieneAscensor) {

            super(direccion, metrosCuadrados, numHabitaciones, numBanos, precio, tieneGaraje, tieneJardin);
            this.planta = planta;
            this.tieneAscensor = tieneAscensor;
        }

        @Override
        public void mostrarInfo() {
            super.mostrarInfo();
            System.out.println("Planta: " + planta);
            System.out.println("Ascensor: " + (tieneAscensor ? "S√≠" : "No"));
            System.out.println("--------------------------------------");
        }
    }

    public static class Chalet extends Vivienda {
        protected boolean tienePiscina;
        protected double tamanoParcela;

        public Chalet(String direccion, int metrosCuadrados, int numHabitaciones, int numBanos,
                      double precio, boolean tieneGaraje, boolean tieneJardin,
                      boolean tienePiscina, double tamanoParcela) {

            super(direccion, metrosCuadrados, numHabitaciones, numBanos, precio, tieneGaraje, tieneJardin);
            this.tienePiscina = tienePiscina;
            this.tamanoParcela = tamanoParcela;
        }

        @Override
        public void mostrarInfo() {
            super.mostrarInfo();
            System.out.println("Piscina: " + (tienePiscina ? "S√≠" : "No"));
            System.out.println("Tama√±o parcela: " + tamanoParcela + " m¬≤");
            System.out.println("--------------------------------------");
        }
    }

    public static class Apartamento extends Vivienda {

        public Apartamento(String direccion, int metrosCuadrados, int numBanyos,
                           double precio, boolean tieneGaraje, boolean tieneJardin) {

            super(direccion, metrosCuadrados, 1, numBanyos, precio, tieneGaraje, tieneJardin);
        }

        @Override
        public void mostrarInfo() {
            super.mostrarInfo();
            System.out.println("Tipo: Apartamento (1 habitaci√≥n)");
            System.out.println("--------------------------------------");
        }
    }

    public static class CasaRural extends Vivienda {

        public CasaRural(String direccion, int metrosCuadrados, int numBanyos, int numHabitaciones,
                           double precio, boolean tieneGaraje, boolean tieneJardin) {

            super(direccion, metrosCuadrados, numHabitaciones, numBanyos, precio, tieneGaraje, tieneJardin);
        }

        @Override
        public void mostrarInfo() {
            super.mostrarInfo();
            System.out.println("Tipo: Casa Rural (1 habitaci√≥n)");
            System.out.println("--------------------------------------");
        }
    }


    public static void main(String[] args) {
        Vivienda piso = new Piso("Av. Blasco Ib√°√±ez 45, Valencia", 90, 3, 2,
                220000, true, false, 5, true);

        Vivienda chalet = new Chalet("Calle Pinos 32, Alicante", 200, 5, 3,
                450000, true, true, true, 350.5);


        Vivienda apartamento = new Apartamento("Calle 13 Rue del Percebe, Mislata", 50, 1, 110000,
                false, false);

        Vivienda casaRural = new Apartamento("Camino del Bosque s/n, L'Eliana", 225, 3, 400000,
                true, true);

        System.out.println("=== INFORMACI√ìN DE VIVIENDAS ===");
        piso.mostrarInfo();
        chalet.mostrarInfo();
        apartamento.mostrarInfo();
        casaRural.mostrarInfo();

    }


}



